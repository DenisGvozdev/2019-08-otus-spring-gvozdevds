DROP TABLE IF EXISTS STATUSES;
CREATE TABLE STATUSES(
  ID BIGINT NOT NULL AUTO_INCREMENT,
  NAME VARCHAR(255),
  PRIMARY KEY (ID)
);

DROP TABLE IF EXISTS AUTHORS;
CREATE TABLE AUTHORS(
  ID BIGINT NOT NULL AUTO_INCREMENT,
  FIRSTNAME VARCHAR(255),
  SECONDNAME VARCHAR(255),
  THIRDNAME VARCHAR(255),
  BIRTH_DATE TIMESTAMP,
  PRIMARY KEY (ID)
);

DROP TABLE IF EXISTS GENRES;
CREATE TABLE GENRES(
  ID BIGINT NOT NULL AUTO_INCREMENT,
  NAME VARCHAR(255),
  PRIMARY KEY (ID)
);

DROP TABLE IF EXISTS COMMENTS;
CREATE TABLE COMMENTS(
  ID BIGINT NOT NULL AUTO_INCREMENT,
  BOOK_ID INT,
  COMMENT VARCHAR(255),
  CREATE_DATE TIMESTAMP,
  PRIMARY KEY (ID)
);

DROP TABLE IF EXISTS BOOKS;
CREATE TABLE BOOKS(
  ID BIGINT NOT NULL AUTO_INCREMENT,
  NAME VARCHAR(255),
  CREATE_DATE TIMESTAMP,
  DESCRIPTION VARCHAR(255),
  IMAGE VARBINARY(MAX),
  GENRES INT,
  STATUS INT,
  AUTHORS INT,
  COMMENTS INT,
  PRIMARY KEY (ID),
  FOREIGN KEY (GENRES) REFERENCES GENRES (ID),
  FOREIGN KEY (STATUS) REFERENCES STATUSES (ID),
  FOREIGN KEY (AUTHORS) REFERENCES AUTHORS (ID),
  FOREIGN KEY (COMMENTS) REFERENCES COMMENTS (ID)
);

DROP TABLE IF EXISTS BOOK_GENRE;
CREATE TABLE BOOK_GENRE(
  BOOK_ID BIGINT NOT NULL,
  GENRE_ID BIGINT NOT NULL
);

DROP TABLE IF EXISTS BOOK_AUTHOR;
CREATE TABLE BOOK_AUTHOR(
  BOOK_ID BIGINT NOT NULL,
  AUTHOR_ID BIGINT NOT NULL
);

DROP TABLE IF EXISTS USERS;
CREATE  TABLE USERS (
  USERNAME VARCHAR(255) NOT NULL,
  PASSWORD VARCHAR(255) NOT NULL,
  PRIMARY KEY (USERNAME)
);

DROP TABLE IF EXISTS ROLES;
CREATE  TABLE ROLES (
  ROLE VARCHAR(255) NOT NULL,
  DESCRIPTION VARCHAR(255),
  PRIMARY KEY (ROLE)
);

DROP TABLE IF EXISTS USER_ROLES;
CREATE TABLE USER_ROLES (
  USER_ROLE_ID int(255) NOT NULL AUTO_INCREMENT,
  USERNAME varchar(255) NOT NULL,
  ROLE varchar(255) NOT NULL,
  PRIMARY KEY (USER_ROLE_ID),
  UNIQUE KEY username_role (ROLE,USERNAME),
  FOREIGN KEY (USERNAME) REFERENCES USERS (USERNAME),
  FOREIGN KEY (ROLE) REFERENCES ROLES (ROLE)
);

--- ACL ---
CREATE TABLE IF NOT EXISTS acl_sid (
  id bigint(20) NOT NULL AUTO_INCREMENT,
  principal tinyint(1) NOT NULL,
  sid varchar(100) NOT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY unique_uk_1 (sid,principal)
);

CREATE TABLE IF NOT EXISTS acl_class (
  id bigint(20) NOT NULL AUTO_INCREMENT,
  class varchar(255) NOT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY unique_uk_2 (class)
);

CREATE TABLE IF NOT EXISTS acl_entry (
  id bigint(20) NOT NULL AUTO_INCREMENT,
  acl_object_identity bigint(20) NOT NULL,
  ace_order int(11) NOT NULL,
  sid bigint(20) NOT NULL,
  mask int(11) NOT NULL,
  granting tinyint(1) NOT NULL,
  audit_success tinyint(1) NOT NULL,
  audit_failure tinyint(1) NOT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY unique_uk_4 (acl_object_identity,ace_order)
);

CREATE TABLE IF NOT EXISTS acl_object_identity (
  id bigint(20) NOT NULL AUTO_INCREMENT,
  object_id_class bigint(20) NOT NULL,
  object_id_identity bigint(20) NOT NULL,
  parent_object bigint(20) DEFAULT NULL,
  owner_sid bigint(20) DEFAULT NULL,
  entries_inheriting tinyint(1) NOT NULL,
  PRIMARY KEY (id),
  UNIQUE KEY unique_uk_3 (object_id_class,object_id_identity)
);

ALTER TABLE acl_entry
ADD FOREIGN KEY (acl_object_identity) REFERENCES acl_object_identity(id);

ALTER TABLE acl_entry
ADD FOREIGN KEY (sid) REFERENCES acl_sid(id);

ALTER TABLE acl_object_identity
ADD FOREIGN KEY (parent_object) REFERENCES acl_object_identity (id);

ALTER TABLE acl_object_identity
ADD FOREIGN KEY (object_id_class) REFERENCES acl_class (id);

ALTER TABLE acl_object_identity
ADD FOREIGN KEY (owner_sid) REFERENCES acl_sid (id);